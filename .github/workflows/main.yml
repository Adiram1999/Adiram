name: weyyak-preprod-xms
on:
  workflow_dispatch: # Enable manual triggering
    inputs:
      service : 
        description : 'Name of the Service'
        required : true
        default: 'User'
        type: choice
        options:
        - User
        - Module
        - Frontend
        - Frontend-Config
      tag_id:
        description: 'Tag ID'
        required: true
      branch_name:
        description: 'Branch Name'
        required: true
env:
  PROJECT_ID: weyyak-preprod
  GKE_LOCATION: me-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: weyyak-preprod-xms-dev # TODO: update to cluster name
  NAMESPACE: weyyak-preprod-xms    
jobs:
  configure:
    name: Configure the Deployment
    runs-on: ubuntu-latest
    outputs:
      SERVICE_PATH: ${{ steps.set-variable.outputs.SERVICE_PATH }}
      REPOSITORY: ${{ steps.set-variable.outputs.REPOSITORY }}
      IMAGE: ${{ steps.set-variable.outputs.IMAGE }}
      YAML: ${{ steps.set-variable.outputs.YAML }}
    steps:
      - name: Set variable based on condition
        id: set-variable
        run: |
          if [ "${{ inputs.service }}" == "Module" ]; then
            echo "SERVICE_PATH=xms/core/api/module-api" >> $GITHUB_OUTPUT
            echo "REPOSITORY=wyk-preprod-xms-module" >> $GITHUB_OUTPUT
            echo "IMAGE=wyk-preprod-xms-module" >> $GITHUB_OUTPUT
            echo "YAML=module.yaml" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.service }}" == "Frontend" ]; then
            echo "SERVICE_PATH=xms/core/api/frontend-api" >> $GITHUB_OUTPUT
            echo "REPOSITORY=wyk-preprod-xms-frontend" >> $GITHUB_OUTPUT
            echo "IMAGE=wyk-preprod-xms-frontend" >> $GITHUB_OUTPUT
            echo "YAML=frontend.yaml" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.service }}" == "Frontend-Config" ]; then
            echo "SERVICE_PATH=xms/customer/weyyak/frontend-config-api" >> $GITHUB_OUTPUT
            echo "REPOSITORY=wyk-preprod-xms-frontend-config" >> $GITHUB_OUTPUT
            echo "IMAGE=wyk-preprod-xms-frontend-config" >> $GITHUB_OUTPUT
            echo "YAML=frontend-config.yaml" >> $GITHUB_OUTPUT
          else
            echo "SERVICE_PATH=xms/core/api/user-api" >> $GITHUB_OUTPUT
            echo "REPOSITORY=wyk-preprod-xms-user" >> $GITHUB_OUTPUT
            echo "IMAGE=wyk-preprod-xms-user" >> $GITHUB_OUTPUT
            echo "YAML=user.yaml" >> $GITHUB_OUTPUT
          fi
  display-values:
    name: Display Values of the Variables
    runs-on: ubuntu-latest
    needs: configure
    steps:
      - name: Display all Values
        run: |
          echo "SERVICE_PATH is ${{ needs.configure.outputs.SERVICE_PATH }}"
          echo "REPOSITORY is ${{ needs.configure.outputs.REPOSITORY }}"
          echo "IMAGE is ${{ needs.configure.outputs.IMAGE }}"
          echo "YAML is ${{ needs.configure.outputs.YAML }}"
          echo "PROJECT_ID is ${{env.PROJECT_ID}} "
          echo "GKE_LOCATION is ${{env.GKE_LOCATION}} "
          echo "GKE_CLUSTER is ${{env.GKE_CLUSTER}} "
          echo "NAMESPACE is ${{env.NAMESPACE}} "
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    needs : configure
    runs-on: ubuntu-latest
    environment: preprod
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
       mkdir -p ~/.ssh
       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
       chmod 600 ~/.ssh/id_rsa
       ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: cloning dev repository
      run: |-
        git clone git@github.com:engrotech/xms.git -b "${{ inputs.branch_name }}"
        cd ${{ needs.configure.outputs.SERVICE_PATH }}
    
    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCLOUD_AUTH_PREPROD_WYK }}'

    - name: Docker configuration
      run: |-
        gcloud auth configure-docker ${{ env.GKE_LOCATION }}-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_LOCATION }}

    # Build the Docker image
    - name: Build
      run: |-
        cd xms/core/api/module-api
        docker build -t $IMAGE . --build-arg CONFIG_FILE=weyyak-preprod.json
        docker tag $IMAGE:latest $GKE_LOCATION-docker.pkg.dev/$PROJECT_ID/${{ needs.configure.outputs.REPOSITORY }}/${{ needs.configure.outputs.IMAGE }}:"${{ inputs.tag_id }}"

    # # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push $GKE_LOCATION-docker.pkg.dev/$PROJECT_ID/${{ needs.configure.outputs.REPOSITORY }}/${{ needs.configure.outputs.IMAGE }}:"${{ inputs.tag_id }}"
      
    - name: Deploy
      run: |-
        git clone git@github.com:engrotech/pipelines-weyyak-kubernetes.git -b "weyyak-preprod-xms"
        cd pipelines-weyyak-kubernetes/deployments
        pwd
        sed -i "s/$IMAGE:.*/$IMAGE:${{ inputs.tag_id }}/g" ${{ needs.configure.outputs.YAML }}
        kubectl apply -f ${{ needs.configure.outputs.YAML }}
          
