name: weyyak-preprod-xms
on:
  workflow_dispatch: # Enable manual triggering
    inputs:
      service : 
        description : 'Name of the Service'
        required : true
        default: 'User'
        type: choice
        options:
        - User
        - Module
        - Frontend
        - Frontend-Config
      tag_id:
        description: 'Tag ID'
        required: true
      branch_name:
        description: 'Branch Name'
        required: true
    
env:
  PROJECT_ID: weyyak-preprod
  GKE_LOCATION: me-central1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: weyyak-preprod-xms-dev # TODO: update to cluster name
  # REPOSITORY: wyk-preprod-xms-module # TODO: update to Artifact Registry docker repository
  # IMAGE: wyk-preprod-xms-module
  NAMESPACE: weyyak-preprod-xms

jobs:
  configure:
    name: configure the deployment
    runs-on: ubuntu-latest
    steps:
      - name: Set variable based on condition
        id: set-variable
        run: |
          if [ "${{ inputs.service }}" == "Module" ]; then
            echo "::set-output name=SERVICE_PATH::xms/core/api/module-api"
            echo "::set-output name=REPOSITORY::wyk-preprod-xms-module"
            echo "::set-output name=IMAGE::wyk-preprod-xms-module"
            echo "::set-output name=YAML::module.yaml"
          elif [ "${{ inputs.service }}" == "Frontend" ]; then
            echo "::set-output name=SERVICE_PATH::xms/core/api/frontend-api"
            echo "::set-output name=REPOSITORY::wyk-preprod-xms-frontend"
            echo "::set-output name=IMAGE::wyk-preprod-xms-frontend"
            echo "::set-output name=YAML::frontend.yaml"
          elif [ "${{ inputs.service }}" == "Frontend-Config" ]; then
            echo "::set-output name=SERVICE_PATH::xms/customer/weyyak/frontend-config-api"
            echo "::set-output name=REPOSITORY::wyk-preprod-xms-frontend-config"
            echo "::set-output name=IMAGE::wyk-preprod-xms-frontend-config"
            echo "::set-output name=YAML::frontend-config.yaml"
          else
            echo "::set-output name=SERVICE_PATH::xms/core/api/user-api"
            echo "::set-output name=REPOSITORY::wyk-preprod-xms-user"
            echo "::set-output name=IMAGE::wyk-preprod-xms-user"
            echo "::set-output name=YAML::user.yaml"
  display-values:
    name : display values of the variables
    runs-on : ubuntu-latest
    needs : configure
    steps:
      - name : Display all Values
        run : |
          echo "SERVICE_PATH is ${{ steps.set-variable.outputs.SERVICE_PATH }}"
          echo "REPOSITORY is ${{ steps.set-variable.outputs.REPOSITORY }}"
          echo "IMAGE is ${{ steps.set-variable.outputs.IMAGE }}"
          echo "YAML is ${{ steps.set-variable.outputs.YAML }}"
       
    
  # setup-build-publish-deploy:
  #   name: Setup, Build, Publish, and Deploy
  #   runs-on: ubuntu-latest
  #   environment: preprod
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Set up SSH key
  #     run: |
  #      mkdir -p ~/.ssh
  #      echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #      chmod 600 ~/.ssh/id_rsa
  #      ssh-keyscan github.com >> ~/.ssh/known_hosts

  #   - name: cloning dev repository
  #     run: |-
  #       git clone git@github.com:engrotech/xms.git -b "${{ inputs.branch_name }}"
  #       cd xms/core/api/module-api
    
  #   # Alternative option - authentication via credentials json
  #   - id: 'auth'
  #     uses: 'google-github-actions/auth@v2'
  #     with:
  #       credentials_json: '${{ secrets.GCLOUD_AUTH_PREPROD_WYK }}'

  #   - name: Docker configuration
  #     run: |-
  #       gcloud auth configure-docker ${{ env.GKE_LOCATION }}-docker.pkg.dev

  #   # Get the GKE credentials so we can deploy to the cluster
  #   - name: Set up GKE credentials
  #     uses: google-github-actions/get-gke-credentials@v2
  #     with:
  #       cluster_name: ${{ env.GKE_CLUSTER }}
  #       location: ${{ env.GKE_LOCATION }}

  #   # Build the Docker image
  #   - name: Build
  #     run: |-
  #       cd xms/core/api/module-api
  #       docker build -t $IMAGE . --build-arg CONFIG_FILE=weyyak-preprod.json
  #       docker tag $IMAGE:latest $GKE_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:"${{ inputs.tag_id }}"

  #   # # Push the Docker image to Google Artifact Registry
  #   - name: Publish
  #     run: |-
  #       docker push $GKE_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:"${{ inputs.tag_id }}"

  #   # - name: "Set up Cloud SDK"
  #   #   uses: google-github-actions/setup-gcloud@v2
  #   #   with:
  #   #     install_components: 'gke-gcloud-auth-plugin'

  #   # - name: gcloud version & install kubectl
  #   #   run: |-
  #   #     gcloud components install kubectl

  #   # - name: Configure Kubernetes credentials
  #   #   run: |-
  #   #     gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_LOCATION --project $PROJECT_ID 

  #   # - name: Retry kubectl command
  #   #   run: |-
  #   #     kubectl get pods -n $NAMESPACE
          
  #   - name: Deploy
  #     run: |-
  #       git clone git@github.com:engrotech/pipelines-weyyak-kubernetes.git -b "weyyak-preprod-xms"
  #       cd pipelines-weyyak-kubernetes/deployments
  #       pwd
  #       sed -i "s/$IMAGE:.*/$IMAGE:${{ inputs.tag_id }}/g" module.yaml
  #       kubectl apply -f module.yaml
